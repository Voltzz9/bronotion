networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:14
    container_name: postgres-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: bronotion
    networks:
      - app-network
    volumes:
      - ./backend/sql/DDL.sql:/docker-entrypoint-initdb.d/DDL.sql
    ports:
      - "5432:5432"
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bronotion-express-backend
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: bronotion
      DB_USER: admin
      DB_PASSWORD: admin
      PORT: 8080
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: bronotion-frontend-app-dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    networks:
      - app-network
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - db
      - backend
  
  frontend-prod:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: bronotion-frontend-app-prod
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    networks:
      - app-network
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - db
      - backend